/**
font
 */
@import url(https://fonts.googleapis.com/css?family=Lato:400,700);
@import url(http://fonts.googleapis.com/earlyaccess/notosansjp.css);

/**
variable
 */

/* Material Design Color */
/* Palette generated by Material Palette - materialpalette.com/cyan/lime */
$primary-color-dark:   #0097A7;
$primary-color:        #00BCD4;
$primary-color-light:  #B2EBF2;
$primary-color-text:   #FFFFFF;
$accent-color:         #CDDC39;
$primary-text-color:   #212121;
$secondary-text-color: #757575;
$divider-color:        #BDBDBD;
/* layout variable */
$root-width: 640px;
$header-height: 60px;
$footer-height: 70px;
/* switch variable */
$switch-width: 40px;
$switch-label-width: 30px;
/* btn variable */
$back-btn-size: 40px;
$btn-section-space: $back-btn-size / 2;
$back-btn-num: 3;
$btn-section-height: $back-btn-size * $back-btn-num + $btn-section-space * $back-btn-num;
$play-btn-size: $btn-section-height - $btn-section-space;
/* range variable */
$thumb-r: 10px;
/* eq variable */
$eq-area-width: 500px;
$eq-num: 10;

/**
root settings
 */
* {
  box-sizing: border-box;
}
html {
  font-size: 62.5%;
}
body {
  width: $root-width;
  font-family: Lato, "Noto Sans JP", "游ゴシック Medium", "游ゴシック体", "Yu Gothic Medium", YuGothic, "ヒラギノ角ゴ ProN", "Hiragino Kaku Gothic ProN", "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;
  font-size: 1.4rem;
  line-height:1.4;
  color: $primary-text-color;
  position: relative;
}
input[type="range"] {
  -webkit-appearance: none;
  &:focus,
  &:active {
    outline: none;
  }
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
  }
}
object {
  pointer-events: none;
}

/**
no ui slider customize
 */
.noUi-target {
  background: $primary-color-text;
  border: 1px solid $divider-color;
  border-radius: 0;
  box-shadow: none;
  cursor: default;
}
.noUi-horizontal {
  height: 10px;
}
.noUi-connect {
  background: $primary-color;
  border-radius: 2px;
  box-shadow: none;
  transition: background .15s;
}
.noUi-handle {
  &:focus {
    outline: none;
  }
  cursor: pointer;
}
.noUi-horizontal .noUi-handle {
  width: 10px;
  height: 28px;
  left: -3px;
  top: -10px;
}
.noUi-handle {
  border: 1px solid $divider-color;
  border-radius: 2px;
  background: $primary-color-text;
  box-shadow: none;
}
.noUi-handle:after, .noUi-handle:before {
  height: 0;
  width: 0;
}

/**
main layout
 */
.main-flex {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.controller-flex {
  width: 100%;
  display: flex;
  flex-direction: row;
}
.divider {
  width: 100%;
  background-color: $divider-color;
  height: 1px;
}

/**
header area
 */
.header {
  position: relative;
  width: 100%;
  height: $header-height;
  background-color: $primary-color-light;
  text-align: center;
}
.title {
  color: $primary-color-dark;
  font-size: 3.6rem;
  line-height: $header-height;
  font-weight: bold;
  vertical-align: text-top;
}
//.on-off-switch {
//  position: absolute;
//  top: 0;
//  bottom: 0;
//  right: 0;
//  padding: ($header-height - ($switch-width / 2)) / 2;
//}

/**
switch
 */
.switch-flex {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: $switch-width + $switch-label-width * 2;
  input {
    display: none;
  }
}
.switch-slider {
  order: 2;
  position: relative;
  width: $switch-width;
  height: $switch-width / 2;
  cursor: pointer;
  background-color: $divider-color;
  transition: .15s;
  border-radius: $switch-width / 4;
  &:before {
    position: absolute;
    content: "";
    height: ($switch-width / 2) * 0.8;
    width: ($switch-width / 2) * 0.8;
    left: ($switch-width / 2) * 0.1;
    bottom: ($switch-width / 2) * 0.1;
    background-color: $primary-color-text;
    transition: .15s;
    border-radius: 50%;
  }
}
input:checked + .switch-slider {
  background-color: $primary-color;
  &:before {
    transform: translateX($switch-width / 2);
  }
}
.switch-label {
  color: $secondary-text-color;
}
.switch-pre-label {
  order: 1;
  color: $primary-color;
}
.switch-post-label {
  order: 3;
}
input:checked + .switch-slider + .switch-pre-label {
  color: $secondary-text-color;
}
input:checked + .switch-slider + .switch-pre-label + .switch-post-label {
  color: $primary-color;
}

/**
seek-bar area
 */
.seek-bar-area {
  width: 90%;
  height: 180px;
}
.duration-text {
  text-align: right;
  font-size: 1.8rem;
  margin: 10px 0;
}
.seek-bar-range[type="range"] {
  width: 100%;
  height: 10px;
  border-radius: 2px;
  background-color: $divider-color;
  &::-webkit-slider-thumb {
    cursor: pointer;
    width: 10px;
    height: 40px;
    border: 2px solid $primary-color;
    background-color: $primary-color-light;
    transition: .15s;
  }
  &:active::-webkit-slider-thumb {
    box-shadow: 0 0 0 5px rgba($primary-color, 0.5);
    transition: .15s;
  }
}
.loop-slider-area {
  margin-top: 30px;
}
.loop-control-area {
  margin: 20px 0;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.loop-text {
  font-size: 1.6rem;
}
.loop-title {
  color: $primary-color;
  font-weight: bold;
}
.loop-on-off {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.repeat-icn {
  width: 28px;
  height: 28px;
  object {
    width: 28px;
    height: 28px;
  }
}

.vocal-control-area {
  margin: 20px 0;
}

/**
btn section
 */
.btn {
  display: block;
  text-decoration: none;
  cursor: pointer;
  background-color: $primary-color;
  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);
  border-radius: 2px;
  transition: .15s ease-in-out;
  &:hover {
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.4);
    transform: scale(1.05, 1.05);
  }
  &:active {
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);
    transform: scale(1, 1);
  }
}
.btn-flex {
  height: $btn-section-height;
  width: $btn-section-space * 2 + $back-btn-size + $play-btn-size;
  margin: 10px;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
}
.back-btn-flex {
  height: $btn-section-height;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}
.play-btn {
  width: $play-btn-size;
  height: $play-btn-size;
}
.back-btn {
  width: $back-btn-size;
  height: $back-btn-size;
}
#play-btn-svg {
  display: none;
}
#pause-btn-svg {
  display: inline;
}

/**
controller range
 */
.range-flex {
  margin: 10px;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  flex-grow: 1;
}
.range-wrapper {
  width: 100%;
}
.range-head-flex {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.range-label {
  label {
    color: $primary-color;
    font-weight: bold;
  }
}
.range-reset-wrap {
  text-align: center;
}
.reset-btn {
  width: 50px;
  height: 19px;
  text-align: center;
  color: $primary-color-text;
}
.control-range[type="range"] {
  width: 100%;
  height: $thumb-r / 2;
  border-radius: $thumb-r / 4;
  background-color: $divider-color;
  &::-webkit-slider-thumb {
    cursor: pointer;
    width: $thumb-r * 2;
    height: $thumb-r * 2;
    border: ($thumb-r / 5) solid $primary-color;
    background-color: $primary-color-light;
    border-radius: 50%;
  }
  &:active::-webkit-slider-thumb {
    box-shadow: 0 0 0 ($thumb-r * 0.8) rgba($primary-color, 0.5);
    transition: .15s;
  }
}

/**
EQ area
 */
.eq-header {
  width: 100%;
  padding: 10px 20px 0;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.eq-title {
  color: $primary-color;
  font-weight: bold;
  font-size: 2.0rem;
}
.eq-box {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 300px;
  height: $eq-area-width;
  margin: 0;
  transform: rotate(-90deg) translateX(80px);
}
.each-eq {
  height: 50px;
  padding: 10px 0;
}
.eq-value-area {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: $eq-area-width;
  text-align: center;
  position: absolute;
  transform: translateY(-160px);
  left: 70px;
}
.eq-value {
  width: $eq-area-width / $eq-num;
}

/**
footer
 */
.footer {
  position: absolute;
  bottom: 0;
  width: $root-width;
  height: $footer-height;
  padding: 0 15px;
  background-color: $primary-color-light;
  text-align: right;
}
.copy-right {
  color: $secondary-text-color;
  line-height: $footer-height;
}

/**
piano
 */

@mixin key-char($char) {
  content: $char;
  font-size: 12px;
  position: absolute;
  top: 80px;
  left: 6px;
}
@mixin key-char-black($char) {
  display: block;
  content: $char;
  font-size: 12px;
  margin-top: 45px;
  text-align: center;
  color: white;
}

.pf-area {
  height: 210px;
  padding-top: 20px;
  -webkit-user-select: none;
}
.piano {
  font-size: 0;
  position: relative;
}
.key {
  display: inline-block;
  position: relative;
  top: 0;
  width: 20px;
  height: 100px;
  border: 1px solid #222;
  border-radius: 2px;
  box-shadow: 0 6px #bbb;
  background: #eee;
  transition: all .1s ease-out;
  cursor: pointer;

  &.key--active {
    top: 6px;
    box-shadow: 0 0 #bbb, 0 0 2px 1px #bbb inset;
  }
  &--black {
    position: absolute;
    top: -6px;
    height: 65px;
    width: 16px;
    background: #222;
    box-shadow: 0 6px #555;
    z-index: 2;
    margin-left: -8px;
    &.key--active {
      top: 0;
      box-shadow: 0 0 #555, 0 0 2px 1px #555 inset;
    }
  }
  &--c::after {
    @include key-char("a");
  }
  &--cis::after {
    @include key-char-black("w");
  }
  &--d::after {
    @include key-char("s");
  }
  &--dis::after {
    @include key-char-black("e");
  }
  &--e::after {
    @include key-char("d");
  }
  &--f::after {
    @include key-char("f");
  }
  &--fis::after {
    @include key-char-black("t");
  }
  &--g::after {
    @include key-char("g");
  }
  &--gis::after {
    @include key-char-black("y");
  }
  &--a::after {
    @include key-char("h");
  }
  &--ais::after {
    @include key-char-black("u");
  }
  &--h::after {
    @include key-char("j");
  }
  &--hic::after {
    @include key-char("k");
  }
}
.octave-selector {
  display: flex;
  margin: 10px 0;
  height: 20px;
  width: 560px;
  &__block {
    width: 140px;
    height: 20px;
    border: 1px solid $primary-text-color;
    background: $primary-color-light;
    transition: all .2s;
    cursor: pointer;
    &--active {
      background: $primary-color;
      cursor: default;
    }
  }
}
